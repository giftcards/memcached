#! /bin/sh
#
# chkconfig: - 55 45
# description:  The memcached daemon is a network memory cache service.
# processname: memcached
# config: /etc/memcached/memcached_*
# pidfile: /var/run/memcached/memcached.pid

# Standard LSB functions
#. /lib/lsb/init-functions

# Source function library.
. /etc/init.d/functions

PORT=11211
USER=memcached
MAXCONN=1024
CACHESIZE=64
OPTIONS=""

# Check that networking is up.
. /etc/sysconfig/network

if [ "$NETWORKING" = "no" ]
then
        exit 0
fi

### Read configuration
#[ -r "$SYSCONFIG" ] && source "$SYSCONFIG"
FILES=(/etc/memcached/memcached_*);
# check for alternative config schema
if [ -r "${FILES[0]}" ]; then
        CONFIGS=();
        for FILE in "${FILES[@]}";
        do
                # remove prefix
                #echo "${FILE} ==> file"
                NAME=${FILE#/etc/memcached/};
                # check optional second param
                if [ $# -ne 2 ];
                then
                  # add to config array
                  CONFIGS+=($NAME);
                elif [ "$2" == "$NAME" ];
                then
                  # use only one memcached
                  CONFIGS=($NAME);
                  break;
                fi;
        done;
  if [ ${#CONFIGS[@]} == 0 ];
  then
    echo "Config not exist for: $2" >&2;
    exit 1;
  fi;
else
  CONFIGS=(memcached);
fi;

CONFIG_NUM=${#CONFIGS[@]};
for ((i=0; i < $CONFIG_NUM; i++)); do
  NAME=${CONFIGS[${i}]};
  PIDFILE="/var/run/memcached/${NAME}.pid";
  #echo "LOOP \"$CONFIG_NUM\""
  #echo "config ==> ${NAME}"
  #echo "$PIDFILE ==> PID"

##

RETVAL=0
#prog="memcached"
prog="${NAME}"
source "/etc/memcached/${NAME}"
desc="Distributed memory caching"

start() {
        echo -n $"Starting $desc (${NAME}): "
        daemon --pidfile $PIDFILE memcached -P $PIDFILE -d -l $IP_ADDR -p $PORT -u $USER -c $MAXCONN -m $CACHESIZE $OPTIONS
        #echo " $prog -d -p $PORT -U $PORT -u $USER -c $MAXCONN -m $CACHESIZE $OPTIONS"
        RETVAL=$?
        echo
        [ $RETVAL -eq 0 ] && touch /var/lock/subsys/$prog
        return $RETVAL
}

stop() {
        echo -n $"Shutting down $desc ($prog): "
        echo "$PIDFILE"
        killproc -p $PIDFILE memcached
        RETVAL=$?
        echo
        [ $RETVAL -eq 0 ] && rm -f /var/lock/subsys/$prog
        return $RETVAL
}

restart() {
        stop
        start
}

reload() {
        echo -n $"Reloading $desc ($prog): "
        killproc $prog -HUP
        RETVAL=$?
        echo
        return $RETVAL
}

case "$1" in
  start)
        start
        ;;
  stop)
        stop
        ;;
  restart)
        restart
        ;;
  condrestart)
        [ -e /var/lock/subsys/$prog ] && restart
        RETVAL=$?
        ;;
  reload)
        reload
        ;;
  status)
        status -p $PIDFILE $prog
        RETVAL=$?
        ;;
   *)
        echo $"Usage: $0 {start|stop|restart|condrestart|status}"
        RETVAL=1
esac

##$RETVAL

done;
